CREATE PROCEDURE [dbo].[Load_ELDO_DATA_FROMDB2] 

AS
BEGIN

	SET NOCOUNT ON;

BEGIN TRANSACTION

BEGIN TRY  

-- ELDOPENDCLMSHEADER 
-- ELDOPENDCLMSLINES 

TRUNCATE TABLE ELDOPENDCLMSHEADER

INSERT INTO ELDOPENDCLMSHEADER
SELECT * FROM OPENQUERY(AIXCLAIMS, 'SELECT * FROM CLAIMS.ELDOPENDCLMSHEADER');

TRUNCATE TABLE ELDOPENDCLMSLINES

INSERT INTO ELDOPENDCLMSLINES
SELECT * FROM OPENQUERY(AIXCLAIMS, 'SELECT * FROM CLAIMS.ELDOPENDCLMSLINES');


-- ELDOMCSCLAIMS 
-- ELDOMCSCLMLINES
TRUNCATE TABLE ELDOMCSCLAIMS

INSERT INTO ELDOMCSCLAIMS
SELECT * FROM OPENQUERY(AIXCLAIMS, 'SELECT * FROM CLAIMS.ELDOMCSCLAIMS');

TRUNCATE TABLE ELDOMCSCLMLINES

INSERT INTO ELDOMCSCLMLINES
SELECT * FROM OPENQUERY(AIXCLAIMS, 'SELECT * FROM CLAIMS.ELDOMCSCLMLINES');

--ELDODISBPAIDHEADER
--ELDODISBPAIDLINES

TRUNCATE TABLE ELDODISBPAIDHEADER

INSERT INTO ELDODISBPAIDHEADER
SELECT * FROM OPENQUERY(AIXCLAIMS, 'SELECT * FROM CLAIMS.ELDODISBPAIDHEADER');

TRUNCATE TABLE ELDODISBPAIDLINES

INSERT INTO ELDODISBPAIDLINES
SELECT * FROM OPENQUERY(AIXCLAIMS, 'SELECT * FROM CLAIMS.ELDODISBPAIDLINES');

--ELDODISBPENDHEADER
--ELDODISBPENDLINES

TRUNCATE TABLE ELDODISBPENDHEADER

INSERT INTO ELDODISBPENDHEADER
SELECT * FROM OPENQUERY(AIXCLAIMS, 'SELECT * FROM CLAIMS.ELDODISBPENDHEADER');

TRUNCATE TABLE ELDODISBPENDLINES

INSERT INTO ELDODISBPENDLINES
SELECT * FROM OPENQUERY(AIXCLAIMS, 'SELECT * FROM CLAIMS.ELDODISBPENDLINES');

--ELDOPFLPAIDHEADER 
--ELDOPFLPAIDLINES  

TRUNCATE TABLE ELDOPFLPAIDHEADER

INSERT INTO ELDOPFLPAIDHEADER
SELECT * FROM OPENQUERY(AIXCLAIMS, 'SELECT * FROM CLAIMS.ELDOPFLPAIDHEADER');

TRUNCATE TABLE ELDOPFLPAIDLINES

INSERT INTO ELDOPFLPAIDLINES
SELECT * FROM OPENQUERY(AIXCLAIMS, 'SELECT * FROM CLAIMS.ELDOPFLPAIDLINES');


--ELDOPFLPENDHEADER 
--ELDOPFLPENDLINES

TRUNCATE TABLE ELDOPFLPENDHEADER

INSERT INTO ELDOPFLPENDHEADER
SELECT * FROM OPENQUERY(AIXCLAIMS, 'SELECT * FROM CLAIMS.ELDOPFLPENDHEADER');

TRUNCATE TABLE ELDOPFLPENDLINES

INSERT INTO ELDOPFLPENDLINES
SELECT * FROM OPENQUERY(AIXCLAIMS, 'SELECT * FROM CLAIMS.ELDOPFLPENDLINES');

END TRY  
BEGIN CATCH  
   SELECT   
        ERROR_NUMBER() AS ErrorNumber  
        ,ERROR_SEVERITY() AS ErrorSeverity  
        ,ERROR_STATE() AS ErrorState  
        ,ERROR_PROCEDURE() AS ErrorProcedure  
        ,ERROR_LINE() AS ErrorLine  
        ,ERROR_MESSAGE() AS ErrorMessage;  
  
    IF @@TRANCOUNT > 0  
        ROLLBACK TRANSACTION;  

END CATCH

IF @@TRANCOUNT > 0  
    COMMIT TRANSACTION;  
  
END