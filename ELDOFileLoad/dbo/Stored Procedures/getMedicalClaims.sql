CREATE PROCEDURE [dbo].[getMedicalClaims] 
	(@p_member_id varchar(max), @p_start int = 0, @p_count int = 5)
AS
BEGIN

SET NOCOUNT ON;

select * from (
	select h.CLAIM_NUMBER 
	, h.POLICY_UNDERWRITER + h.GROUP_NUMBER as CLIENT
	, h.PROVIDER_TAX_ID_1 PROVIDER_TAX_ID
	, 'Pend' as STATUS
	
	
	, min(d.FROM_DATE_OF_SERVICE) DATE_OF_SERVICE
	, h.TOTAL_CHARGE_AMOUNT TOTAL_CHARGE
	, SUM(d.PAID_TO_PATIENT + d.PAID_TO_PROVIDER) PAID_AMOUNT
	--, p.PRACTITIONER_NAME
--	, h.PERIODIC_CONTINUOUS
--	, h.APPROVED_THRU_DATE
--	, d.THRU_DATE_OF_SERVICE
--	, h.RECEIVED_DATE
--	, d.PAYMENT_AMOUNT
	, h.PAID_DATE
--	, h.TIFF_IMAGE_IDENTIFIER IMAGE_ID

	from dbo.ELDOPENDCLMSHEADER h
	inner join dbo.ELDOPENDCLMSLINES d on h.CLAIM_NUMBER = d.CLAIM_NUMBER and h.POLICY_UNDERWRITER = d.POLICY_UNDERWRITER and h.GROUP_NUMBER = d.GROUP_NUMBER
	--left join [AIXCLAIMS].[CLAIMS].[CLAIMS].[ELDOPROVIDERS] p on H.KEY_TO_PROVIDER_FILE_1 = p.PHYSICIAN_ID
	where h.employee_ssn = @p_member_id
	group by 	h.CLAIM_NUMBER 
	, h.POLICY_UNDERWRITER + h.GROUP_NUMBER 
	, h.TOTAL_CHARGE_AMOUNT
	, h.PROVIDER_TAX_ID_1
	--, p.PRACTITIONER_NAME
	, h.PAID_DATE
	

	union 

	select 

	h.CLAIM_NUMBER 
	, h.POLICY_UNDERWRITER + h.GROUP_NUMBER as CLIENT
	, h.PROVIDER_TAX_ID_1 PROVIDER_TAX_ID
	, 'Pend' as status
	, min(d.FROM_DATE_OF_SERVICE) DATE_OF_SERVICE
	, h.TOTAL_CHARGE_AMOUNT TOTAL_CHARGE
	, SUM(d.PAID_TO_PATIENT + d.PAID_TO_PROVIDER) PAID_AMOUNT
	--, p.PRACTITIONER_NAME
	--, h.PERIODIC_CONTINUOUS
	--, h.APPROVED_THRU_DATE
	--, d.THRU_DATE_OF_SERVICE
	--, h.RECEIVED_DATE
	--, d.PAYMENT_AMOUNT
	, h.PAID_DATE
	--, h.TIFF_IMAGE_IDENTIFIER IMAGE_ID

	from dbo.ELDOCLMSHEADER h
	inner join dbo.ELDOCLMSLINES d on h.CLAIM_NUMBER = d.CLAIM_NUMBER and h.POLICY_UNDERWRITER = d.POLICY_UNDERWRITER and h.GROUP_NUMBER = d.GROUP_NUMBER
	--left join [AIXCLAIMS].[CLAIMS].[CLAIMS].[ELDOPROVIDERS] p on H.KEY_TO_PROVIDER_FILE_1 = p.PHYSICIAN_ID
	where h.employee_ssn = @p_member_id
	group by 	h.CLAIM_NUMBER 
	, h.POLICY_UNDERWRITER + h.GROUP_NUMBER 
	, h.TOTAL_CHARGE_AMOUNT
	, h.PROVIDER_TAX_ID_1
	--, p.PRACTITIONER_NAME
	, h.PAID_DATE
	
) x 
order by x.PAID_DATE desc
offset @p_start rows fetch next @p_count rows only

END
